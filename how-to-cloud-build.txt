1. How to use local gcp shell to run build

    Step 1: create DockerFile, .dockerignore file, and .gcloudignore
        Docker file format:
            FROM node:16.13.1
            WORKDIR /app
            COPY package*.json ./
            RUN npm install
            COPY . .
            EXPOSE 5000
            CMD ["node", "ApiServer.js"]
        .dockerignore file format
            .git
            *Dockerfile*
            *docker-compose*
            node_modules
        .gcloudignore (not verified yet)
            #!include:.gitignore
            #!include:.dockerignore

    Step 2: create GKE project, and enable Cloud Build API and Container Registery Api
        
    Step 3: create cloudbuild.yaml
        Format:
        steps:
            - name: 'gcr.io/cloud-builders/docker'
            args: [ 'build', '-t', 'gcr.io/nimble-charmer-336120/my-api-project', '.' ]
            - name: 'gcr.io/cloud-builders/docker'
            args: [ 'push', 'gcr.io/nimble-charmer-336120/my-api-project' ]

    Step 4: login into the google cloud sdk shell (local PC)
            cd C:\myCodebase\HaifengTestProject\my-api-project\
            set HTTP_PROXY=http://webproxystatic-bc.tsl.telus.com:8080  (or the next 3 commands)
            gcloud config set proxy/type http
            gcloud config set proxy/address webproxystatic-bc.tsl.telus.com
            gcloud config set proxy/port 8080
            gcloud auth login --no-launch-browser (probably need to use VPN)
            gcloud config set project nimble-charmer-336120

    Step 5: run cloud build
            gcloud builds submit --config cloudbuild.yaml ./    
            After the execution, you can find the image in Container Registery



2. How to connect to github to run build in GCP console
    Step 1: in cloud build page, create a trigger (in this example, we use manaul invoke)
    Step 2: run build for the trigger 
    Step 3: in cloud build / history, view the build log (click the build)